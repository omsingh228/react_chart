{"ast":null,"code":"var _jsxFileName = \"D:\\\\OM\\\\STUDY\\\\CODING\\\\WEB-DEV PROJECT\\\\React\\\\react_chart\\\\chart\\\\src\\\\Charts\\\\LineChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport Chart from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst LineChart = () => {\n  _s();\n\n  var _chart$coins, _chart$coins2, _chart$coins3;\n\n  const [chart, setChart] = useState({});\n  var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=6\";\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  var apikey = \"coinrankingb356fdbd7575218efa8b3e168d83f1dff69b100a72e49caa\";\n\n  const mongoose = require('mongoose');\n\n  mongoose.connect(\"mongodb://\");\n\n  async function getPosts() {\n    const myPosts = await fetch(\"https://api.coinranking.com/v2/coins/?limit=6\");\n    const response = await myPosts.json();\n    console.log(response);\n  }\n\n  getPosts();\n  useEffect(() => {\n    const fetchCoins = async () => {\n      await fetch(`${proxyUrl}${baseUrl}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': `${apikey}`,\n          'Access-Control-Allow-Origin': \"*\"\n        }\n      }).then(response => {\n        if (response.ok) {\n          response.json().then(json => {\n            console.log(json.data);\n            setChart(json.data);\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    fetchCoins();\n  }, [baseUrl, proxyUrl, apikey]);\n  var data = {\n    labels: chart === null || chart === void 0 ? void 0 : (_chart$coins = chart.coins) === null || _chart$coins === void 0 ? void 0 : _chart$coins.map(x => x.name),\n    datasets: [{\n      label: `${chart === null || chart === void 0 ? void 0 : (_chart$coins2 = chart.coins) === null || _chart$coins2 === void 0 ? void 0 : _chart$coins2.length} Coins Available`,\n      data: chart === null || chart === void 0 ? void 0 : (_chart$coins3 = chart.coins) === null || _chart$coins3 === void 0 ? void 0 : _chart$coins3.map(x => x.price),\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      height: 400,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LineChart, \"ip4zykqV5S/78tH8IJvHUJRfpBU=\");\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","LineChart","chart","setChart","baseUrl","proxyUrl","apikey","mongoose","require","connect","getPosts","myPosts","fetch","response","json","console","log","fetchCoins","method","headers","then","ok","data","catch","error","labels","coins","map","x","name","datasets","label","length","price","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","legend","fontSize"],"sources":["D:/OM/STUDY/CODING/WEB-DEV PROJECT/React/react_chart/chart/src/Charts/LineChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\nimport Chart from 'chart.js/auto';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\n\r\nconst LineChart = () => {\r\n  const [chart, setChart] = useState({})\r\n  var baseUrl = \"https://api.coinranking.com/v2/coins/?limit=6\";\r\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n  var apikey = \"coinrankingb356fdbd7575218efa8b3e168d83f1dff69b100a72e49caa\";\r\n\r\n\r\n  const mongoose =  require('mongoose');\r\n  mongoose.connect(\"mongodb://\")\r\n  async function getPosts(){\r\n    const myPosts = await fetch(\"https://api.coinranking.com/v2/coins/?limit=6\");\r\n    const response = await myPosts.json();\r\n    console.log(response);\r\n  }\r\n  getPosts();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchCoins = async () => {\r\n      await fetch(`${proxyUrl}${baseUrl}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'x-access-token': `${apikey}`,\r\n          'Access-Control-Allow-Origin': \"*\"\r\n        }\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            response.json().then((json) => {\r\n              console.log(json.data);\r\n              setChart(json.data)\r\n            });\r\n          }\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    fetchCoins()\r\n  }, [baseUrl, proxyUrl, apikey])\r\n\r\n \r\n  var data = {\r\n    labels: chart?.coins?.map(x => x.name),\r\n    datasets: [{\r\n      label: `${chart?.coins?.length} Coins Available`,\r\n      data: chart?.coins?.map(x => x.price),\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.2)',\r\n        'rgba(54, 162, 235, 0.2)',\r\n        'rgba(255, 206, 86, 0.2)',\r\n        'rgba(75, 192, 192, 0.2)',\r\n        'rgba(153, 102, 255, 0.2)',\r\n        'rgba(255, 159, 64, 0.2)'\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)'\r\n      ],\r\n      borderWidth: 1\r\n    }]\r\n  };\r\n\r\n  var options = {\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n    },\r\n    legend: {\r\n      labels: {\r\n        fontSize: 25,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Line\r\n        data={data}\r\n        height={400}\r\n        options={options}\r\n\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart"],"mappings":"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"},"metadata":{},"sourceType":"module"}